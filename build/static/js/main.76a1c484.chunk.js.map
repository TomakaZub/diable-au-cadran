{"version":3,"sources":["firebase/config.js","firebase/firebase.js","firebase/context.js","firebase/index.js","components/UX-UI/loading/Loading.js","utils/hooks/useBackground.js","utils/hooks/useTransition.js","components/UX-UI/scroller/Scroller.js","components/UX-UI/mouseTracker/MouseTracker.js","components/sections/homePage/HomePage.js","components/sections/homePage/index.js","utils/hooks/useActivSection.js","utils/textUtil.js","components/sections/service/Service.js","components/sections/service/index.js","components/sections/savoirFaire/SavoirFaire.js","components/sections/savoirFaire/index.js","components/UX-UI/googleMaps/GoogleMapWithMarker.js","components/UX-UI/googleMaps/MapWrapper.js","components/sections/contact/Contact.js","components/sections/contact/index.js","utils/hooks/useCustomUx.js","components/fixedElements/menu/Menu.js","components/fixedElements/menu/index.js","components/fixedElements/pager/Pager.js","components/fixedElements/FixedElements.js","components/SectionControler.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","constructor","login","provider","a","auth","signInWithPopup","logout","signOut","app","initializeApp","this","db","firestore","facebookProvider","FacebookAuthProvider","FirebaseContext","createContext","Loading","className","type","useBackground","appContext","useContext","useState","cssClass","setCssClass","useEffect","isMenuOpen","isChanging","useTransition","Scroller","MouseTracker","offsetX","offsetY","friction","state","setState","_mouseMove","e","followX","window","innerWidth","clientX","followY","innerHeight","clientY","x","y","prevState","document","addEventListener","removeEventListener","offset","transform","style","React","memo","section","filterFx","tech","order","HomePage","useActivSection","isActiv","setIsActiv","idActivSection","id","addLineBreaks","string","split","map","text","index","Fragment","key","isActivSection","content1","content2","data-text","title","Service","content","SavoirFaire","styles","require","GoogleMapComponentWithMarker","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","defaultOptions","disableDefaultUI","draggable","keyboardShortcuts","scaleControl","scrollwheel","position","width","height","MapWrapper","googleMapURL","loadingElement","containerElement","mapElement","layout","labelCol","sm","span","wrapperCol","validateMessages","required","types","email","onFinish","values","console","log","settings","globalSettings","adress","zipcode","city","phone","labelAlign","Item","name","label","rules","TextArea","autoSize","minRows","htmlType","Contact","useCustomUx","customUx","setCustomUx","sections","filter","Menu","listItem","setAppContext","isOpenMenu","onClick","prev","Pager","FixedElements","listSectionWithoutLabel","listSectionWithLabel","customClass","siteName","length","SectionControler","currentSlideIndex","getCurrentSlideIndex","renderSlidesNumbers","displayLabel","slidesCount","scrollToSlide","handleClick","i","setTimeout","slidesNumbers","buttonProps","disabled","push","INITIAL_CONTEXT","targetSection","App","afterChange","from","to","beforeChange","updateSectionsContextWithFirebase","snapshot","docs","doc","data","updateGlobalSettingsContextWithFirebase","getSections","collection","orderBy","onSnapshot","getGlobalSettings","Provider","value","controls","duration","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76a1c484.chunk.js","sourcesContent":["/** ATTENTION : ne pas exposer\n *\n * Configuration Firebase (à retrouver sur l'interface Firebase)\n */\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_DIABLE_AU_CADRAN_API_KEY,\n  authDomain: process.env.REACT_APP_DIABLE_AU_CADRAN_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DIABLE_AU_CADRAN_DATABASE_URL,\n  projectId: process.env.REACT_APP_DIABLE_AU_CADRAN_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_DIABLE_AU_CADRAN_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_DIABLE_AU_CADRAN_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_DIABLE_AU_CADRAN_APP_ID,\n}\n\nexport default firebaseConfig\n","import app from \"firebase/app\"\nimport \"firebase/firestore\"\nimport \"firebase/auth\"\n\nimport firebaseConfig from \"./config\"\n\n/**\n * Class servant d'interface avec Firebase\n * Initialisation database, authentification facebook\n */\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig)\n    this.db = app.firestore()\n    this.facebookProvider = new app.auth.FacebookAuthProvider()\n    this.auth = app.auth()\n  }\n\n  login = async (provider) => {\n    await this.auth.signInWithPopup(this[`${provider}Provider`])\n  }\n  logout = async () => await this.auth.signOut()\n}\n\nconst firebase = new Firebase()\nexport default firebase\n","/**\n * Création du context de l'application\n */\nimport { createContext } from \"react\"\n\nconst FirebaseContext = createContext(null)\n\nexport default FirebaseContext\n","import firebase from \"./firebase\"\nimport FirebaseContext from \"./context\"\n\nexport { FirebaseContext }\n\nexport default firebase\n","import React from \"react\"\nimport ReactLoading from \"react-loading\"\n\nimport \"./style.css\"\n\nconst Loading = () => (\n  <div className='loading'>\n    <ReactLoading type='spinningBubbles' />\n  </div>\n)\n\nexport default Loading\n","import { useContext, useEffect, useState } from \"react\"\nimport FirebaseContext from \"../../firebase/context\"\n\n/**\n * Hook qui écoute l'ouverture du menu latéral et applice une filtre CSS\n *\n * Ouverture du menu latéral : on insère la class filterFx dans le DOM\n */\nconst useBackground = () => {\n  const { appContext } = useContext(FirebaseContext)\n\n  const [cssClass, setCssClass] = useState(\"\")\n\n  useEffect(() => {\n    if (appContext.isMenuOpen || appContext.isChanging) {\n      setCssClass(\"filterFx\")\n    } else setCssClass(\"\")\n  }, [appContext.isMenuOpen, appContext.isChanging])\n\n  return cssClass\n}\n\nexport default useBackground\n","import { useContext, useEffect, useState } from \"react\"\nimport FirebaseContext from \"../../firebase/context\"\n\n/**\n * Hook qui écoute s'il y a un changement de section en cours\n *\n * Changement en cours : on insère la class css qui ajoute un border blanc\n */\nconst useTransition = () => {\n  const { appContext } = useContext(FirebaseContext)\n  const [cssClass, setCssClass] = useState(\"\")\n\n  useEffect(() => {\n    const cssClass = appContext.isChanging ? \"isChanging\" : \"\"\n    setCssClass(cssClass)\n  }, [appContext.isChanging])\n\n  return cssClass\n}\n\nexport default useTransition\n","import React from \"react\"\n\nimport \"./style/style.css\"\n\nconst Scroller = () => {\n  return (\n    <div className='scroll-info'>\n      <div className='mousey'>\n        <div className='scroller'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default Scroller\n","import React, { useEffect, useState } from \"react\"\n\nimport \"./style/style.css\"\n\nconst MouseTracker = () => {\n  const INITIAL_STATE = {\n    offsetX: 0,\n    offsetY: 0,\n    friction: 1 / 32,\n  }\n\n  const [state, setState] = useState(INITIAL_STATE)\n\n  useEffect(() => {\n    const _mouseMove = (e) => {\n      let followX = window.innerWidth / 2 - e.clientX\n      let followY = window.innerHeight / 2 - e.clientY\n      let x = 0,\n        y = 0\n      x += (-followX - x) * state.friction\n      y += (followY - y) * state.friction\n      setState((prevState) => {\n        return { ...prevState, offsetX: x, offsetY: y }\n      })\n    }\n\n    document.addEventListener(\"mousemove\", _mouseMove)\n\n    return () => {\n      document.removeEventListener(\"mousemove\", _mouseMove)\n    }\n  }, [state])\n\n  let offset = {\n    transform: `translate(-50%, -50%) perspective(600px)\n                rotateY(${state.offsetX}deg)\n                rotateX(${state.offsetY}deg)`,\n  }\n\n  return (\n    <div className='wrapper' style={offset}>\n      <div className='shape' />\n      <div className='shape2'>{/* <p>Le diable au cadran</p> */}</div>\n    </div>\n  )\n}\n\nexport default MouseTracker\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.init()\n//   }\n//   init() {\n//     this.state = {\n//       offsetX: \"\",\n//       offsetY: \"\",\n//       friction: 1 / 32\n//     }\n//     this._mouseMove = this._mouseMove.bind(this)\n//   }\n//   componentDidMount() {\n//     document.addEventListener(\"mousemove\", this._mouseMove)\n//   }\n//   componentWillUnmount() {\n//     document.removeEventListener(\"mousemove\", this._mouseMove)\n//   }\n//   _mouseMove(e) {\n//     let followX = window.innerWidth / 2 - e.clientX\n//     let followY = window.innerHeight / 2 - e.clientY\n\n//     let x = 0,\n//       y = 0\n//     x += (-followX - x) * this.state.friction\n//     y += (followY - y) * this.state.friction\n//     this.setState({\n//       offsetX: x,\n//       offsetY: y\n//     })\n//   }\n//   render() {\n//     let offset = {\n//       transform: `translate(-50%, -50%) perspective(600px)\n//                   rotateY(${this.state.offsetX}deg)\n//                   rotateX(${this.state.offsetY}deg)`\n//     }\n\n//     return (\n//       <div className='wrapper' style={offset}>\n//         <div className='shape'></div>\n//         <div className='shape2'></div>\n//         <p>Move your mouse or finger around</p>\n//       </div>\n//     )\n//   }\n// }\n// ReactDOM.render(<App />, document.getElementById(\"app\"))\n","import React from \"react\"\nimport Scroller from \"../../UX-UI/scroller/Scroller\"\nimport MouseTracker from \"../../UX-UI/mouseTracker/MouseTracker\"\n\nimport \"./style/style.css\"\n\n/**\n * Home page du site\n */\nconst HomePage = ({ section, filterFx, isChanging }) => {\n  if (section) {\n    return (\n      <div\n        className={`section section${section.tech.order} ${isChanging} homePage`}\n      >\n        <div className={`section-container ${filterFx}`}>\n          <MouseTracker />\n          <Scroller />\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default React.memo(HomePage)\n","import React from \"react\"\nimport \"./style/style.css\"\nimport useBackground from \"../../../utils/hooks/useBackground\"\nimport useTransition from \"../../../utils/hooks/useTransition\"\nimport Component from \"./HomePage\"\n\nconst HomePage = ({ section }) => {\n  const filterFx = useBackground()\n  const isChanging = useTransition()\n  return (\n    <Component section={section} filterFx={filterFx} isChanging={isChanging} />\n  )\n}\n\nexport default HomePage\n","import { useContext, useEffect, useState } from \"react\"\nimport FirebaseContext from \"../../firebase/context\"\n\nconst useActivSection = (section) => {\n  const { appContext } = useContext(FirebaseContext)\n  const [isActiv, setIsActiv] = useState()\n\n  useEffect(() => {\n    if (appContext.idActivSection === section.id) {\n      setIsActiv(\"activ-section\")\n    } else setIsActiv(null)\n  }, [appContext.idActivSection, section.id])\n\n  return isActiv\n}\n\nexport default useActivSection\n","import React from \"react\"\n\n/**\n * Fonction qui retourne un nouveau noeud react dans le DOM lorsqu'un \\n est détecté dans un texte.\n * @param {} string\n */\nexport const addLineBreaks = (string) =>\n  string.split(\"\\\\n\").map((text, index) => {\n    return (\n      <React.Fragment key={`${text}-${index}`}>\n        {text}\n        <br />\n      </React.Fragment>\n    )\n  })\n","import React from \"react\"\nimport { addLineBreaks } from \"../../../utils/textUtil\"\n\nimport \"./style/style.css\"\n\nconst Service = ({ section, isChanging, filterFx, isActivSection }) => {\n  if (section) {\n    return (\n      <div\n        id='section1'\n        className={`section section${section.tech.order} ${isChanging} ${isActivSection} service`}\n      >\n        <div className={`section-container ${filterFx}`}>\n          <div className={`left-bloc-dark ${isActivSection}`}>\n            <div className='text-container'>\n              <div className='content'>{addLineBreaks(section.content1)}</div>\n              <h2\n                className={`${\n                  isActivSection ? \"anim-title activ\" : \"anim-title\"\n                }`}\n              >\n                <span>100% artisanal</span>\n                <span>Découvrez l'atelier !</span>\n              </h2>\n              <div className='content'>{addLineBreaks(section.content2)}</div>\n            </div>\n          </div>\n          <div className={`right-bloc-light ${isActivSection}`}>\n            <h1 className='title-decoration' data-text={section.title}>\n              {section.title}\n            </h1>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default React.memo(Service)\n","import React from \"react\"\nimport \"./style/style.css\"\nimport useBackground from \"../../../utils/hooks/useBackground\"\nimport useTransition from \"../../../utils/hooks/useTransition\"\nimport useActivSection from \"../../../utils/hooks/useActivSection\"\nimport Component from \"./Service\"\n\nconst Service = ({ section }) => {\n  const filterFx = useBackground()\n  const isChanging = useTransition()\n  const isActivSection = useActivSection(section)\n  return (\n    <Component\n      section={section}\n      filterFx={filterFx}\n      isChanging={isChanging}\n      isActivSection={isActivSection}\n    />\n  )\n}\n\nexport default Service\n","import React from \"react\"\nimport { addLineBreaks } from \"../../../utils/textUtil\"\n\nimport \"./style/style.css\"\n\nconst SavoirFaire = ({ section, isChanging, filterFx, isActivSection }) => {\n  if (section) {\n    return (\n      <div\n        className={`section section${section.tech.order} ${isChanging} ${isActivSection} savoir-faire`}\n      >\n        <div className={`section-container ${filterFx}`}>\n          <div className={`left-bloc-dark ${isActivSection}`}>\n            <div className='text-container'>\n              <div className='content'>{addLineBreaks(section.content)}</div>\n              <div className='profil-picture'>\n                <div className='picture'></div>\n              </div>\n            </div>\n          </div>\n          <div className={`right-bloc-light ${isActivSection}`}>\n            <h1 className='title-decoration' data-text={section.title}>\n              {section.title}\n            </h1>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default React.memo(SavoirFaire)\n","import React from \"react\"\nimport \"./style/style.css\"\nimport useBackground from \"../../../utils/hooks/useBackground\"\nimport useTransition from \"../../../utils/hooks/useTransition\"\nimport useActivSection from \"../../../utils/hooks/useActivSection\"\nimport Component from \"./SavoirFaire\"\n\nconst SavoirFaire = ({ section }) => {\n  const filterFx = useBackground()\n  const isChanging = useTransition()\n  const isActivSection = useActivSection(section)\n  return (\n    <Component\n      section={section}\n      filterFx={filterFx}\n      isChanging={isChanging}\n      isActivSection={isActivSection}\n    />\n  )\n}\n\nexport default SavoirFaire\n","// Import React\nimport React from \"react\"\n\n// Import necessary components for React Google Maps\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from \"react-google-maps\"\n\n// Import custom styles to customize the style of Google Map\nconst styles = require(\"./GoogleMapStyles.json\")\n\n// Import custom icon for map marker\n// You can use this if you need to support IE11 and lower.\n// const mapMarker = require('./GoogleMapMarker.svg')\n\n// Google Map component\nconst GoogleMapComponentWithMarker = withScriptjs(\n  withGoogleMap((props) => (\n    <GoogleMap\n      defaultZoom={16}\n      defaultCenter={{\n        lat: 48.7451695, // latitude for the center of the map\n        lng: -0.0227061, // longitude for the center of the map\n      }}\n      defaultOptions={{\n        disableDefaultUI: true, // disable default map UI\n        draggable: true, // make map draggable\n        keyboardShortcuts: false, // disable keyboard shortcuts\n        scaleControl: true, // allow scale controle\n        scrollwheel: true, // allow scroll wheel\n        styles: styles, // change default map styles\n      }}\n    >\n      <Marker\n        // icon={{\n        //   url:\n        //     // eslint-disable-next-line no-multi-str\n        //     'data:image/svg+xml;utf-8, \\\n        //     <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"45\" viewBox=\"0 0 512 512\"><path fill=\"#e74c3c\" d=\"M252.55 0h5.95c33.76.52 67.31 11.19 94.97 30.59 27.22 18.94 48.77 45.95 61.03 76.77 13.14 32.69 15.69 69.52 7.17 103.71-4.69 19.44-13.24 37.77-24.07 54.54-43.51 75.53-86.86 151.15-130.3 226.72-3.45 6.37-7.56 12.4-10.59 18.97l-.03.7h-1.21c-1.09-3.48-3.25-6.44-4.99-9.6-45.11-78.52-90.2-157.06-135.34-235.57-11.21-17.1-19.98-35.9-24.82-55.81-8.5-34.15-5.96-70.94 7.16-103.6 12.26-30.85 33.82-57.89 61.07-76.84C185.94 11.35 219.12.74 252.55 0m-6.26 64.44c-35.07 2.83-67.55 24.7-84.18 55.59-12.65 23.12-15.96 51.04-9.61 76.57 5.91 23.77 20.39 45.27 40.13 59.76 15.73 11.8 34.8 19.03 54.4 20.59 25.3 2.2 51.34-4.95 71.73-20.15 21.42-15.44 36.67-39.16 41.84-65.06 3.31-17.12 2.61-35.08-2.44-51.8-7.43-24.97-24.51-46.85-46.76-60.35-19.27-12.01-42.54-17.21-65.11-15.15z\" /><path fill=\"#c0392b\" d=\"M246.29 64.44c22.57-2.06 45.84 3.14 65.11 15.15 22.25 13.5 39.33 35.38 46.76 60.35 5.05 16.72 5.75 34.68 2.44 51.8-5.17 25.9-20.42 49.62-41.84 65.06-20.39 15.2-46.43 22.35-71.73 20.15-19.6-1.56-38.67-8.79-54.4-20.59-19.74-14.49-34.22-35.99-40.13-59.76-6.35-25.53-3.04-53.45 9.61-76.57 16.63-30.89 49.11-52.76 84.18-55.59m1.83 42.76c-15.04 1.8-29.3 9.21-39.45 20.45-10.03 10.95-16.02 25.5-16.56 40.34-.67 14.62 3.9 29.41 12.74 41.08 9.61 12.84 24.18 21.87 39.99 24.58 13.71 2.43 28.21.28 40.55-6.18 13.67-7.04 24.63-19.16 30.18-33.5 5.65-14.32 5.84-30.7.55-45.15-4.99-13.88-15-25.86-27.72-33.3-12.03-7.13-26.42-10.05-40.28-8.32z\" /></svg>', // This may not work in <=IE11\n        // }}\n        position={{ lat: 48.7451695, lng: -0.0227061 }}\n      />\n    </GoogleMap>\n  ))\n)\n\n// Export Google Map component\nexport default GoogleMapComponentWithMarker\n","import React from \"react\"\n\n// Import Google Map component\nimport GoogleMapComponentWithMarker from \"./GoogleMapWithMarker\"\n\n// Some default styles\nconst styles = {\n  width: \"100%\",\n  height: \"100%\",\n}\n\nconst MapWrapper = () => {\n  return (\n    <div style={styles}>\n      <GoogleMapComponentWithMarker\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_DIABLE_AU_CADRAN_GOOGLE_MAPS_KEY}`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div>\n  )\n}\n\nexport default MapWrapper\n","import React from \"react\"\nimport MapWrapper from \"../../UX-UI/googleMaps/MapWrapper\"\nimport { Form, Input, Button } from \"antd\"\nimport \"antd/dist/antd.css\"\n\nimport \"./style/style.css\"\n\nconst Contact = ({ section, isChanging, filterFx, appContext }) => {\n  const layout = {\n    labelCol: {\n      sm: { span: 24 },\n    },\n    wrapperCol: {\n      sm: { span: 24 },\n    },\n  }\n  const validateMessages = {\n    // eslint-disable-next-line no-template-curly-in-string\n    required: \"${label} est nécéssaire.\",\n    types: {\n      email: \"Ce n'est pas un email valide.\",\n    },\n  }\n\n  const onFinish = (values) => {\n    console.log(\"submit\")\n  }\n\n  if (section) {\n    const settings = appContext.globalSettings[0]\n    return (\n      <div\n        className={`section section${section.tech.order} ${isChanging} contact`}\n      >\n        <div className={`section-container ${filterFx}`}>\n          <div className='left-side'>\n            <MapWrapper />\n          </div>\n          <div className='right-side'>\n            <div className='adress'>\n              <h3>Contact</h3>\n              <span>{settings && settings.adress}</span>\n              <span>\n                {settings && settings.zipcode} - {settings && settings.city}\n              </span>\n              <span>{settings && settings.phone}</span>\n            </div>\n            <Form\n              {...layout}\n              onFinish={onFinish}\n              validateMessages={validateMessages}\n              className='form-contact'\n              labelAlign='left'\n            >\n              <Form.Item\n                name={[\"user\", \"name\"]}\n                label='Nom + Prénom'\n                className='input-field'\n                // onChange={(e) => setUserName(e.target.value)}\n                rules={[\n                  {\n                    required: true,\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                name={[\"user\", \"email\"]}\n                label='Email'\n                // onChange={(e) => setEmail(e.target.value)}\n                className='input-field'\n                rules={[\n                  {\n                    type: \"email\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                name={[\"user\", \"message\"]}\n                // onChange={(e) => setMessage(e.target.value)}\n                label='Message'\n                className='input-field'\n              >\n                <Input.TextArea autoSize={{ minRows: 8 }} />\n              </Form.Item>\n              <Button htmlType='submit' className='send-email-btn'>\n                Envoyer un email\n              </Button>\n            </Form>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default React.memo(Contact)\n","import React, { useContext } from \"react\"\nimport FirebaseContext from \"../../../firebase/context\"\nimport \"./style/style.css\"\nimport useBackground from \"../../../utils/hooks/useBackground\"\nimport useTransition from \"../../../utils/hooks/useTransition\"\nimport Component from \"./Contact\"\n\nconst Contact = ({ section }) => {\n  const filterFx = useBackground()\n  const isChanging = useTransition()\n  const { appContext } = useContext(FirebaseContext)\n\n  return (\n    <Component\n      section={section}\n      filterFx={filterFx}\n      isChanging={isChanging}\n      appContext={appContext}\n    />\n  )\n}\n\nexport default Contact\n","import { useContext, useEffect, useState } from \"react\"\nimport FirebaseContext from \"../../firebase/context\"\n\nconst useCustomUx = () => {\n  const { appContext } = useContext(FirebaseContext)\n  const [customUx, setCustomUx] = useState(\"\")\n\n  useEffect(() => {\n    appContext.sections\n      .filter((section) => section.id === appContext.idActivSection)\n      .map((section) => {\n        return setCustomUx(`custom-section-${section.tech.order + 1}`)\n      })\n  }, [appContext.idActivSection])\n\n  return customUx\n}\n\nexport default useCustomUx\n","import React from \"react\"\nimport \"./style/style.css\"\n\nconst Menu = ({ listItem, appContext, setAppContext }) => {\n  const settings = appContext.globalSettings[0]\n  return (\n    <div className={`main-menu`}>\n      <div\n        className={\n          appContext.isMenuOpen ? \"list-item-menu open\" : \"list-item-menu\"\n        }\n      >\n        {listItem}\n        <div className={\"adress\"}>\n          <span>{settings && settings.adress}</span>\n          <span>\n            {settings && settings.zipcode} - {settings && settings.city}\n          </span>\n          <span>{settings && settings.phone}</span>\n        </div>\n      </div>\n      <div\n        className={appContext.isOpenMenu ? \"btn-menu open\" : \"btn-menu\"}\n        onClick={() =>\n          setAppContext((prev) => {\n            return {\n              ...prev,\n              isMenuOpen: !prev.isMenuOpen,\n            }\n          })\n        }\n      >\n        <p className='menu'>menu.</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Menu\n","import React, { useContext } from \"react\"\nimport FirebaseContext from \"../../../firebase/context\"\nimport \"./style/style.css\"\n\nimport Component from \"./Menu\"\n\nconst Menu = ({ listItem }) => {\n  const { appContext, setAppContext } = useContext(FirebaseContext)\n\n  return (\n    <Component\n      setAppContext={setAppContext}\n      appContext={appContext}\n      listItem={listItem}\n    />\n  )\n}\n\nexport default Menu\n","import React from \"react\"\nimport \"./style/style.css\"\n\nconst Pager = ({ listItem }) => {\n  return <div className={\"pager-item\"}>{listItem}</div>\n}\n\nexport default Pager\n","import React, { useContext } from \"react\"\nimport FirebaseContext from \"../../firebase/context\"\nimport useCustomUx from \"../../utils/hooks/useCustomUx\"\nimport Menu from \"./menu/\"\nimport Pager from \"./pager/Pager\"\n\nimport \"./style/style.css\"\n\nconst FixedElements = ({ listSectionWithoutLabel, listSectionWithLabel }) => {\n  const { appContext } = useContext(FirebaseContext)\n  const customClass = useCustomUx()\n\n  const siteName =\n    appContext.globalSettings.length && appContext.globalSettings[0].siteName\n\n  return (\n    <div className={`header ${customClass}`}>\n      <div className='site-name'>{siteName}</div>\n      <Menu listItem={listSectionWithLabel} />\n      <Pager listItem={listSectionWithoutLabel} />\n    </div>\n  )\n}\n\nexport default FixedElements\n","import React, { useContext } from \"react\"\nimport FirebaseContext from \"../firebase/context\"\nimport FixedElements from \"./fixedElements/FixedElements\"\n\n/**\n * Composant qui permet d'afficher les contrôleurs du site (pager et menu latéral)\n * Il y a un seul contrôleur pour deux composants\n * @param {} props\n */\nexport const SectionControler = (props) => {\n  const { appContext, setAppContext } = useContext(FirebaseContext)\n  const { getCurrentSlideIndex } = props\n  const currentSlideIndex = getCurrentSlideIndex()\n\n  const renderSlidesNumbers = (currentSlideIndex, displayLabel) => {\n    const { slidesCount, scrollToSlide } = props\n\n    // Gère le clic sur un des items (menu et pager)\n    const handleClick = (i) => {\n      if (appContext.isMenuOpen) {\n        setAppContext((prev) => {\n          return { ...prev, isMenuOpen: false, isChanging: true }\n        })\n      } else {\n        setAppContext((prev) => {\n          return { ...prev, isChanging: true }\n        })\n      }\n      setTimeout(() => scrollToSlide(i), 1000)\n    }\n\n    // Calcule le nom de balise slide il y a dans App.js et ajoute le nom de button\n    const slidesNumbers = []\n    for (let i = 0; i < slidesCount; i++) {\n      const buttonProps = {\n        disabled: currentSlideIndex === i,\n        className: \"item\",\n        key: i,\n        onClick: () => handleClick(i),\n      }\n      slidesNumbers.push(\n        <div {...buttonProps}>\n          {displayLabel && appContext.sections[i].title}\n        </div>\n      )\n    }\n    return slidesNumbers\n  }\n\n  return (\n    <FixedElements\n      listSectionWithoutLabel={renderSlidesNumbers(currentSlideIndex, false)}\n      listSectionWithLabel={renderSlidesNumbers(currentSlideIndex, true)}\n    />\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { FullPage, Slide } from \"react-full-page\"\nimport firebase, { FirebaseContext } from \"./firebase\"\nimport Loading from \"./components/UX-UI/loading/Loading\"\nimport HomePage from \"./components/sections/homePage/\"\nimport Service from \"./components/sections/service/\"\nimport SavoirFaire from \"./components/sections/savoirFaire\"\nimport Contact from \"./components/sections/contact/\"\nimport { SectionControler } from \"./components/SectionControler\"\n\nimport \"./style/common.css\"\nimport \"./style/section.css\"\n\n// Context de l'application\nconst INITIAL_CONTEXT = {\n  isChanging: false, // si l'utilisateur change de section\n  isMenuOpen: false, // si l'utilisateur ouvre la section\n  idActivSection: \"t6bys0zleWutaW74BnTu\", // id de la première section\n  targetSection: {},\n  sections: {}, // obj avec les objets des sections\n  globalSettings: {},\n}\n\nexport const App = () => {\n  const [appContext, setAppContext] = useState(INITIAL_CONTEXT)\n\n  /**\n   * Met à jour l'id de la section active dans le context\n   * @param {from, to} index de départ et d'arrivé\n   */\n  const afterChange = ({ from, to }) => {\n    if (appContext.isMenuOpen) {\n      setAppContext((prev) => {\n        return { ...prev, isMenuOpen: false, isChanging: true }\n      })\n    } else {\n      setAppContext((prev) => {\n        return {\n          ...prev,\n          idActivSection: appContext.sections[to].id,\n          isChanging: false,\n        }\n      })\n    }\n  }\n\n  const beforeChange = () => {\n    setAppContext((prev) => {\n      return {\n        ...prev,\n        isChanging: true,\n      }\n    })\n  }\n\n  /**\n   * Met à jour le context (sections) avec les données reçues de firebase.\n   * Injection des sections dans le context.\n   * @param {*} snapshot\n   */\n  const updateSectionsContextWithFirebase = (snapshot) => {\n    const sections = snapshot.docs.map((doc) => {\n      const section = {\n        id: doc.id, // on ajoute l'identifiant du document dans la section\n        ...doc.data(), // on ajoute le reste des données\n      }\n      return section\n    })\n\n    setAppContext((prev) => {\n      return { ...prev, sections: sections }\n    })\n  }\n\n  /**\n   * Met à jour le context (globalSettings) avec les données reçues de firebase.\n   * Injection des sections dans le context.\n   * @param {*} snapshot\n   */\n  const updateGlobalSettingsContextWithFirebase = (snapshot) => {\n    const settings = snapshot.docs.map((doc) => {\n      return doc.data()\n    })\n\n    setAppContext((prev) => {\n      return { ...prev, globalSettings: settings }\n    })\n  }\n\n  /**\n   * Met à jour le context avec les données (firebase).\n   */\n  useEffect(() => {\n    const getSections = async () => {\n      firebase.db\n        .collection(\"sections\")\n        .orderBy(\"tech.order\", \"asc\")\n        .onSnapshot(updateSectionsContextWithFirebase)\n    }\n\n    const getGlobalSettings = async () => {\n      firebase.db\n        .collection(\"global\")\n        .onSnapshot(updateGlobalSettingsContextWithFirebase)\n    }\n\n    const doIt = () => {\n      getSections()\n      getGlobalSettings()\n    }\n    return doIt()\n  }, [])\n\n  if (!appContext.sections.length) {\n    return <Loading />\n  } else {\n    return (\n      <FirebaseContext.Provider value={{ appContext, setAppContext, firebase }}>\n        <div className='sections'>\n          <FullPage\n            controls={SectionControler}\n            duration={1500}\n            afterChange={afterChange}\n            beforeChange={beforeChange}\n          >\n            <Slide>\n              <HomePage section={appContext.sections[0]} />\n            </Slide>\n            <Slide>\n              <Service section={appContext.sections[1]} />\n            </Slide>\n            <Slide>\n              <SavoirFaire section={appContext.sections[2]} />\n            </Slide>\n            <Slide>\n              <Contact section={appContext.sections[3]} />\n            </Slide>\n          </FullPage>\n        </div>\n      </FirebaseContext.Provider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then((registration) => {\n          console.log(\n            \"ServiceWorker registration successful with scope:\",\n            registration.scope\n          )\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport { App } from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}